
> montra@0.1.0 dev
> next dev

   â–² Next.js 15.5.4
   - Local:        http://localhost:3000
   - Network:      http://192.168.1.5:3000
   - Environments: .env

 âœ“ Starting...
 âœ“ Ready in 1536ms
 âœ“ Compiled /middleware in 99ms (127 modules)
 â—‹ Compiling /api/auth/[...all] ...
 âœ“ Compiled /api/auth/[...all] in 558ms (794 modules)
 GET /api/auth/get-session 200 in 1095ms
 POST /api/auth/sign-in/email 400 in 17ms
[2m2025-09-28T15:26:56.141Z[0m [31mERROR[0m [1m[Better Auth]:[0m Invalid password
 POST /api/auth/sign-in/email 401 in 137ms
 POST /api/auth/email-otp/send-email-otp 404 in 12ms
 â—‹ Compiling /signin ...
 âœ“ Compiled /signin in 895ms (1482 modules)
 GET /signin 200 in 1119ms
 GET /api/auth/get-session 200 in 130ms
 POST /api/auth/sign-in/email 403 in 851ms
Sending OTP email to: dixitrayaan@gmail.com
From: noreply@r15game.com
Environment: development
âœ… OTP email sent successfully!
Email ID: 463b0a62-a4ac-4d41-ac7c-b0210591023b
 POST /api/auth/email-otp/send-verification-otp 200 in 837ms
 âœ“ Compiled /verify-otp in 283ms (1485 modules)
 GET /verify-otp 200 in 348ms
 POST /api/auth/email-otp/verify-email 200 in 153ms
 GET /api/auth/get-session 200 in 16ms
 âœ“ Compiled /home in 239ms (1498 modules)
 GET /home 200 in 272ms
 GET /api/auth/get-session 200 in 102ms
 GET /home 200 in 16ms
 GET /api/auth/get-session 200 in 14ms
 GET /home 200 in 8ms
 GET /api/auth/get-session 200 in 15ms
 GET /home 200 in 63ms
 GET /api/auth/get-session 200 in 9ms
 GET /api/auth/get-session 200 in 16ms
 â—‹ Compiling /profile ...
 âœ“ Compiled /profile in 528ms (1588 modules)
 GET /profile 200 in 563ms
 POST /api/auth/sign-out 200 in 74ms
 GET /signin 200 in 21ms
 GET /signin 200 in 9ms
 â¨¯ Error: Could not find the module "/home/neo/montra/node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js#SegmentViewNode" in the React Client Manifest. This is probably a bug in the React Server Components bundler.
    at stringify (<anonymous>) {
  digest: '2084220937'
}
 â¨¯ Error: Could not find the module "/home/neo/montra/node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js#SegmentViewNode" in the React Client Manifest. This is probably a bug in the React Server Components bundler.
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '4205341353'
}
 â¨¯ Error: Could not find the module "/home/neo/montra/node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js#SegmentViewNode" in the React Client Manifest. This is probably a bug in the React Server Components bundler.
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '4205341353'
}
 â¨¯ Error: Could not find the module "/home/neo/montra/node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js#SegmentViewNode" in the React Client Manifest. This is probably a bug in the React Server Components bundler.
    at stringify (<anonymous>)
    at stringify (<anonymous>) {
  digest: '4205341353'
}
 â¨¯ Error: Could not find the module "/home/neo/montra/node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js#SegmentViewNode" in the React Client Manifest. This is probably a bug in the React Server Components bundler.
    at stringify (<anonymous>) {
  digest: '2084220937'
}
 â¨¯ Error: Could not find the module "/home/neo/montra/node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js#SegmentViewNode" in the React Client Manifest. This is probably a bug in the React Server Components bundler.
    at stringify (<anonymous>) {
  digest: '2084220937'
}
 â¨¯ [TypeError: __webpack_modules__[moduleId] is not a function] {
  digest: '4286315202'
}
 â¨¯ Error: Could not find the module "/home/neo/montra/node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js#SegmentViewNode" in the React Client Manifest. This is probably a bug in the React Server Components bundler.
    at stringify (<anonymous>) {
  digest: '2084220937'
}
[TypeError: __webpack_modules__[moduleId] is not a function]
 â¨¯ [TypeError: __webpack_modules__[moduleId] is not a function]
 â¨¯ [TypeError: __webpack_modules__[moduleId] is not a function] {
  page: '/signin'
}
 â—‹ Compiling /_error ...
 âœ“ Compiled /_error in 554ms (1409 modules)
 GET /signin 500 in 2121ms
 âœ“ Compiled in 394ms (1330 modules)
 âœ“ Compiled in 155ms (618 modules)
 âœ“ Compiled in 123ms (618 modules)
 âœ“ Compiled in 108ms (618 modules)
 âœ“ Compiled in 134ms (618 modules)
 âœ“ Compiled in 121ms (618 modules)
 âœ“ Compiled in 117ms (618 modules)
 âœ“ Compiled /api/auth/[...all] in 344ms (1231 modules)
 POST /api/auth/email-otp/send-verification-otp 400 in 549ms
[2m2025-09-28T15:51:14.340Z[0m [31mERROR[0m [1m[Better Auth]:[0m 
Invalid `prisma.verification.create()` invocation:


The column `verification.userId` does not exist in the current database.
# SERVER_ERROR:  Error [PrismaClientKnownRequestError]: 
Invalid `prisma.verification.create()` invocation:


The column `verification.userId` does not exist in the current database.
    at ei.handleRequestError (src/generated/prisma/runtime/library.js:124:7268)
    at ei.handleAndLogRequestError (src/generated/prisma/runtime/library.js:124:6593)
    at ei.request (src/generated/prisma/runtime/library.js:124:6300)
    at async a (src/generated/prisma/runtime/library.js:133:9551)
  122 |
  123 | More Information: https://pris.ly/d/execute-raw
> 124 | `)}var So=({clientMethod:e,activeProvider:r})=>t=>{let n="",i;if(Vn(t))n=t.sql,i={values:Wr(t.values),__prismaRawParameters__:!0};else if(Array.isArray(t)){let[o,...s]=t;n=o,i={values:Wr(s||[]),__prismaRawParameters__:!0}}else switch(r){case"sqlite":case"mysql":{n=t.sql,i={values:Wr(t.values),__prismaRawParameters__:!0};break}case"cockroachdb":case"postgresql":case"postgres":{n=t.text,i={values:Wr(t.values),__prismaRawParameters__:!0};break}case"sqlserver":{n=Vl(t),i={values:Wr(t.values),__prismaRawParameters__:!0};break}default:throw new Error(`The ${r} provider does not support ${e}`)}return i?.values?Ql(`prisma.${e}(${n}, ${i.values})`):Ql(`prisma.${e}(${n})`),{query:n,parameters:i}},Wl={requestArgsToMiddlewareArgs(e){return[e.strings,...e.values]},middlewareArgsToRequestArgs(e){let[r,...t]=e;return new ie(r,t)}},Jl={requestArgsToMiddlewareArgs(e){return[e]},middlewareArgsToRequestArgs(e){return e[0]}};function Ro(e){return function(t,n){let i,o=(s=e)=>{try{return s===void 0||s?.kind==="itx"?i??=Kl(t(s)):Kl(t(s))}catch(a){return Promise.reject(a)}};return{get spec(){return n},then(s,a){return o().then(s,a)},catch(s){return o().catch(s)},finally(s){return o().finally(s)},requestTransaction(s){let a=o(s);return a.requestTransaction?a.requestTransaction(s):a},[Symbol.toStringTag]:"PrismaPromise"}}}function Kl(e){return typeof e.then=="function"?e:Promise.resolve(e)}var Tf=xi.split(".")[0],Sf={isEnabled(){return!1},getTraceParent(){return"00-10-10-00"},dispatchEngineSpans(){},getActiveContext(){},runInChildSpan(e,r){return r()}},Ao=class{isEnabled(){return this.getGlobalTracingHelper().isEnabled()}getTraceParent(r){return this.getGlobalTracingHelper().getTraceParent(r)}dispatchEngineSpans(r){return this.getGlobalTracingHelper().dispatchEngineSpans(r)}getActiveContext(){return this.getGlobalTracingHelper().getActiveContext()}runInChildSpan(r,t){return this.getGlobalTracingHelper().runInChildSpan(r,t)}getGlobalTracingHelper(){let r=globalThis[`V${Tf}_PRISMA_INSTRUMENTATION`],t=globalThis.PRISMA_INSTRUMENTATION;return r?.helper??t?.helper??Sf}};function Hl(){return new Ao}function Yl(e,r=()=>{}){let t,n=new Promise(i=>t=i);return{then(i){return--e===0&&t(r()),i?.(n)}}}function zl(e){return typeof e=="string"?e:e.reduce((r,t)=>{let n=typeof t=="string"?t:t.level;return n==="query"?r:r&&(t==="info"||r==="info")?"info":n},void 0)}function zn(e){return typeof e.batchRequestIdx=="number"}function Zl(e){if(e.action!=="findUnique"&&e.action!=="findUniqueOrThrow")return;let r=[];return e.modelName&&r.push(e.modelName),e.query.arguments&&r.push(Co(e.query.arguments)),r.push(Co(e.query.selection)),r.join("")}function Co(e){return`(${Object.keys(e).sort().map(t=>{let n=e[t];return typeof n=="object"&&n!==null?`(${t} ${Co(n)})`:t}).join(" ")})`}var Rf={aggregate:!1,aggregateRaw:!1,createMany:!0,createManyAndReturn:!0,createOne:!0,deleteMany:!0,deleteOne:!0,executeRaw:!0,findFirst:!1,findFirstOrThrow:!1,findMany:!1,findRaw:!1,findUnique:!1,findUniqueOrThrow:!1,groupBy:!1,queryRaw:!1,runCommandRaw:!0,updateMany:!0,updateManyAndReturn:!0,updateOne:!0,upsertOne:!0};function Io(e){return Rf[e]}var Zn=class{constructor(r){this.options=r;this.batches={}}batches;tickActive=!1;request(r){let t=this.options.batchBy(r);return t?(this.batches[t]||(this.batches[t]=[],this.tickActive||(this.tickActive=!0,process.nextTick(()=>{this.dispatchBatches(),this.tickActive=!1}))),new Promise((n,i)=>{this.batches[t].push({request:r,resolve:n,reject:i})})):this.options.singleLoader(r)}dispatchBatches(){for(let r in this.batches){let t=this.batches[r];delete this.batches[r],t.length===1?this.options.singleLoader(t[0].request).then(n=>{n instanceof Error?t[0].reject(n):t[0].resolve(n)}).catch(n=>{t[0].reject(n)}):(t.sort((n,i)=>this.options.batchOrder(n.request,i.request)),this.options.batchLoader(t.map(n=>n.request)).then(n=>{if(n instanceof Error)for(let i=0;i<t.length;i++)t[i].reject(n);else for(let i=0;i<t.length;i++){let o=n[i];o instanceof Error?t[i].reject(o):t[i].resolve(o)}}).catch(n=>{for(let i=0;i<t.length;i++)t[i].reject(n)}))}}get[Symbol.toStringTag](){return"DataLoader"}};function mr(e,r){if(r===null)return r;switch(e){case"bigint":return BigInt(r);case"bytes":{let{buffer:t,byteOffset:n,byteLength:i}=Buffer.from(r,"base64");return new Uint8Array(t,n,i)}case"decimal":return new Fe(r);case"datetime":case"date":return new Date(r);case"time":return new Date(`1970-01-01T${r}Z`);case"bigint-array":return r.map(t=>mr("bigint",t));case"bytes-array":return r.map(t=>mr("bytes",t));case"decimal-array":return r.map(t=>mr("decimal",t));case"datetime-array":return r.map(t=>mr("datetime",t));case"date-array":return r.map(t=>mr("date",t));case"time-array":return r.map(t=>mr("time",t));default:return r}}function Xn(e){let r=[],t=Af(e);for(let n=0;n<e.rows.length;n++){let i=e.rows[n],o={...t};for(let s=0;s<i.length;s++)o[e.columns[s]]=mr(e.types[s],i[s]);r.push(o)}return r}function Af(e){let r={};for(let t=0;t<e.columns.length;t++)r[e.columns[t]]=null;return r}var Cf=N("prisma:client:request_handler"),ei=class{client;dataloader;logEmitter;constructor(r,t){this.logEmitter=t,this.client=r,this.dataloader=new Zn({batchLoader:rl(async({requests:n,customDataProxyFetch:i})=>{let{transaction:o,otelParentCtx:s}=n[0],a=n.map(p=>p.protocolQuery),l=this.client._tracingHelper.getTraceParent(s),u=n.some(p=>Io(p.protocolQuery.action));return(await this.client._engine.requestBatch(a,{traceparent:l,transaction:If(o),containsWrite:u,customDataProxyFetch:i})).map((p,d)=>{if(p instanceof Error)return p;try{return this.mapQueryEngineResult(n[d],p)}catch(f){return f}})}),singleLoader:async n=>{let i=n.transaction?.kind==="itx"?Xl(n.transaction):void 0,o=await this.client._engine.request(n.protocolQuery,{traceparent:this.client._tracingHelper.getTraceParent(),interactiveTransaction:i,isWrite:Io(n.protocolQuery.action),customDataProxyFetch:n.customDataProxyFetch});return this.mapQueryEngineResult(n,o)},batchBy:n=>n.transaction?.id?`transaction-${n.transaction.id}`:Zl(n.protocolQuery),batchOrder(n,i){return n.transaction?.kind==="batch"&&i.transaction?.kind==="batch"?n.transaction.index-i.transaction.index:0}})}async request(r){try{return await this.dataloader.request(r)}catch(t){let{clientMethod:n,callsite:i,transaction:o,args:s,modelName:a}=r;this.handleAndLogRequestError({error:t,clientMethod:n,callsite:i,transaction:o,args:s,modelName:a,globalOmit:r.globalOmit})}}mapQueryEngineResult({dataPath:r,unpacker:t},n){let i=n?.data,o=this.unpack(i,r,t);return process.env.PRISMA_CLIENT_GET_TIME?{data:o}:o}handleAndLogRequestError(r){try{this.handleRequestError(r)}catch(t){throw this.logEmitter&&this.logEmitter.emit("error",{message:t.message,target:r.clientMethod,timestamp:new Date}),t}}handleRequestError({error:r,clientMethod:t,callsite:n,transaction:i,args:o,modelName:s,globalOmit:a}){if(Cf(r),Df(r,i))throw r;if(r instanceof z&&Of(r)){let u=eu(r.meta);Nn({args:o,errors:[u],callsite:n,errorFormat:this.client._errorFormat,originalMethod:t,clientVersion:this.client._clientVersion,globalOmit:a})}let l=r.message;if(n&&(l=Tn({callsite:n,originalMethod:t,isPanic:r.isPanic,showColors:this.client._errorFormat==="pretty",message:l})),l=this.sanitizeMessage(l),r.code){let u=s?{modelName:s,...r.meta}:r.meta;throw new z(l,{code:r.code,clientVersion:this.client._clientVersion,meta:u,batchRequestIdx:r.batchRequestIdx})}else{if(r.isPanic)throw new ae(l,this.client._clientVersion);if(r instanceof V)throw new V(l,{clientVersion:this.client._clientVersion,batchRequestIdx:r.batchRequestIdx});if(r instanceof P)throw new P(l,this.client._clientVersion);if(r instanceof ae)throw new ae(l,this.client._clientVersion)}throw r.clientVersion=this.client._clientVersion,r}sanitizeMessage(r){return this.client._errorFormat&&this.client._errorFormat!=="pretty"?wr(r):r}unpack(r,t,n){if(!r||(r.data&&(r=r.data),!r))return r;let i=Object.keys(r)[0],o=Object.values(r)[0],s=t.filter(u=>u!=="select"&&u!=="include"),a=ao(o,s),l=i==="queryRaw"?Xn(a):Vr(a);return n?n(l):l}get[Symbol.toStringTag](){return"RequestHandler"}};function If(e){if(e){if(e.kind==="batch")return{kind:"batch",options:{isolationLevel:e.isolationLevel}};if(e.kind==="itx")return{kind:"itx",options:Xl(e)};ar(e,"Unknown transaction kind")}}function Xl(e){return{id:e.id,payload:e.payload}}function Df(e,r){return zn(e)&&r?.kind==="batch"&&e.batchRequestIdx!==r.index}function Of(e){return e.code==="P2009"||e.code==="P2012"}function eu(e){if(e.kind==="Union")return{kind:"Union",errors:e.errors.map(eu)};if(Array.isArray(e.selectionPath)){let[,...r]=e.selectionPath;return{...e,selectionPath:r}}return e}var ru=xl;var su=O(Ki());var _=class extends Error{constructor(r){super(r+`
      |
  125 | Read more at https://pris.ly/d/client-constructor`),this.name="PrismaClientConstructorValidationError"}get[Symbol.toStringTag](){return"PrismaClientConstructorValidationError"}};x(_,"PrismaClientConstructorValidationError");var tu=["datasources","datasourceUrl","errorFormat","adapter","log","transactionOptions","omit","__internal"],nu=["pretty","colorless","minimal"],iu=["info","query","warn","error"],kf={datasources:(e,{datasourceNames:r})=>{if(e){if(typeof e!="object"||Array.isArray(e))throw new _(`Invalid value ${JSON.stringify(e)} for "datasources" provided to PrismaClient constructor`);for(let[t,n]of Object.entries(e)){if(!r.includes(t)){let i=Jr(t,r)||` Available datasources: ${r.join(", ")}`;throw new _(`Unknown datasource ${t} provided to PrismaClient constructor.${i}`)}if(typeof n!="object"||Array.isArray(n))throw new _(`Invalid value ${JSON.stringify(e)} for datasource "${t}" provided to PrismaClient constructor.
  126 | It should have this form: { url: "CONNECTION_STRING" }`);if(n&&typeof n=="object")for(let[i,o]of Object.entries(n)){if(i!=="url")throw new _(`Invalid value ${JSON.stringify(e)} for datasource "${t}" provided to PrismaClient constructor.
  127 | It should have this form: { url: "CONNECTION_STRING" }`);if(typeof o!="string")throw new _(`Invalid value ${JSON.stringify(o)} for datasource "${t}" provided to PrismaClient constructor. {
  code: 'P2022',
  clientVersion: '6.16.2',
  meta: [Object]
}
 POST /api/auth/email-otp/send-verification-otp 500 in 140ms
 âœ“ Compiled in 418ms (1849 modules)
 âœ“ Compiled in 310ms (1849 modules)
   Reload env: .env
 âœ“ Compiled in 126ms (1443 modules)
   Reload env: .env
 âœ“ Compiled in 152ms (1443 modules)
 âš  Found a change in next.config.ts. Restarting the server to apply the changes...
   â–² Next.js 15.5.4
   - Local:        http://localhost:3000
   - Network:      http://192.168.1.5:3000
   - Environments: .env

 âœ“ Starting...
 âœ“ Ready in 1547ms
 âš  Found a change in next.config.ts. Restarting the server to apply the changes...
   â–² Next.js 15.5.4
   - Local:        http://localhost:3000
   - Network:      http://192.168.1.5:3000
   - Environments: .env

 âœ“ Starting...
 âœ“ Ready in 1580ms
